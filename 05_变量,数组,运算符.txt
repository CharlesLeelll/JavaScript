变量的使用:
	 A. var 变量名=值;
	 说明:
	 1. var是JS中的关键字,表示"变量[variable]". 用于创建变量[声明变量]
	 2. JS是弱类型语言,同一个变量中可以存放多种类型的数据.
	 3. 以上代码表示创建容器,并将指定数据放入容器中
	 
	 B. var 变量名; //创建变量[容器]
	 	变量名=值; //将指定数据 存放到 容器中
	 说明:
	 1. 以上方式先创建变量,然后根据需求 存放数据.
	 
	 延伸:
	 java属于强制类型: 变量类型 变量名=值;
	 
	 
	 
	 变量分类:
	 根据变量的有效范围,分为: 全局变量[成员变量]  和  局部变量
	 
	 全局变量: 变量可以在任何方法体中被访问/引用
	 要求: 变量必须编写在方法体之外 或 变量不使用var修饰
	 
	 局部变量: 变量只能在当前方法体中被访问/引用
	 要求: 变量必须编写在方法体之内,且使用var修饰
	 
	 
	 常量: 可以存放一个数据,数据确定以后将不能更改.
	 格式: const 常量名=值;
	 说明: JS有常量的支持,但是不同浏览器兼容不同.


为什么使用数组?
	  张三 男 郑州, 李四 男 大同, 王五 女 北京, 赵六 女 上海. 属于一个班级,请使用合适的容器存放他们.
	  以上需求需要同一个容器存放多个数据,JS中提供了数组解决.
	  
	  数组: 可以同时存放多个不同类型的数据.
	  数组使用:
	  A. var 数组名=new Array(元素个数);
	  说明:
	  1.JS数组中元素个数的指定没有任何意义.
	  2.JS数组可以动态改变元素个数,若没有设置元素的值,新增的元素之为"".
	  
	  B. var 数组名=new Array();
	  说明:
	  1.JS元素个数没有意义,JS支持动态增长.
	  
	  C. var 数组名=new Array(元素1,元素2,..);
	  说明:
	  1.以上方式称为动态初始化.
	  
	  D. var 数组名=[元素1,元素2,..];

	普通方式: 指定元素个数  [数组CURP操作及格式]
	<input type="button" value="确定1" onclick="test1()">
	普通方式: 不指定元素个数
	<input type="button" value="确定2" onclick="test2()">
	创建并指定各元素值
	<input type="button" value="确定3" onclick="test3()">
	数组直接量
	<input type="button" value="确定4" onclick="test4()">


算术运算符: 主要用于计算两个数据的结果
	  常用的符号: + -  *  /   %[求余]
	  
	  关系运算符: 用于比较两个数据的大小关系
	  常用的符号: > < >= <= ==[只比较字面值] !=  ===[比较字面值和类型] !==
	  
	  
	  赋值运算符: 用于将数据 传递给另一个变量
	  常见的符号: = += -= *= /= %=
	  
	  逻辑运算符: 用于表示两个条件的满足关系
	  常见的符号: &&[且] ||[获得] !{非 取反}
	  
	  三目运算符: 
	  格式: 条件 ? 代码1:代码2;
	  原理: 当条件为true时,将执行代码1. 否则执行代码2.